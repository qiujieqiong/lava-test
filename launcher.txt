*** Settings ***
Documentation     Theses cases will test launcher
...					| Start-up
...					| Search APP
...					| Right Key Menu Open
...					| Right Key Menu Send To Desktop/Remove From Desktop
...					| Right Key Menu Send To Dock/Remove From Dock
...					| Right Key Menu Add To Boot/Remove From Boot
...					| Right Key Menu Uninstall

Suite Setup 		Create Result File
#Suite Teardown
#Library	BuiltIn
Library		OperatingSystem
Library		String
Library 	Collections
Library		pyautogui
#Library		FillResult.py
Library 	GetInfo.py

*** Variables ***
${None}	None
#${win_key}	Super_L
${win_key}	winleft
#${esc_key}	Escape
${esc_key}	esc
${down_key}	down
${enter_key}	enter
@{open_terminal}	ctrl 	alt 	t
@{close_window}	alt 	f4
@{show_dock} 		winleft 	h
@{maximize} 		winleft 	up
@{minimize} 		winleft 	down
@{lock} 				winleft 	l
@{dde_session_ui} 	ctrl 	alt 	delete
#@{special_char1} 		~ 	/ 	! 	\ \ 	@ 	\# 	\, 	\.
@{special_char2} 			\<\
${getwindowname}       xdotool getactivewindow getwindowname
${desktop_window_name}	dde-desktop
${terminal_window_name}	深度终端
${movie_app_name}	deepin-movie
${desktop_needle}	needles/desktop.png
${launcher_needle}	needles/launcher.png
${movie_icon_needle}	needles/movieicon.png
${menu_needle}	needles/menu.png
${movie_needle}	needles/movie.png
${open}	needles/open.png
${send_to_desktop}	needles/send_to_desktop.png
${movieicon_in_desktop}	needles/movieicon_in_desktop.png
${remove_from_desktop}	needles/remove_from_desktop.png
${send_to_dock}	needles/send_to_dock.png
${remove_from_dock}	needles/remove_from_dock.png
${add_to_boot}	needles/add_to_boot.png
${remove_from_boot}	needles/remove_from_boot.png
${movieicon_boot}	needles/movieicon_boot.png
${movieicon_checked}	needles/movieicon_checked.png
${dock_no_deepin-movie}	needles/dock_no_deepin-movie.png
${dock_has_deepin-movie}	needles/dock_has_deepin-movie.png
${uninstall}	needles/uninstall.png
${uninstall_dialog}	needles/uninstall_dialog.png
${uninstall_btn}	needles/uninstall_btn.png
${launcher_no_deepin-movie}	needles/launcher_no_deepin-movie.png
${terminal_needle}	needles/terminal.png
${sudo_needle}	needles/sudo.png
${terminal_input}	needles/terminal_input.png
${exist_progress}	ps aux |grep deepin-movie
${exist_in_desktop}	ls ~/桌面
${exist_in_dock}	gsettings get com.deepin.dde.dock docked-apps
${exist_in_boot}		cat ~/.config/autostart/deepin-movie.desktop |grep Hidden
${exist_in_system}		dpkg -s deepin-movie |grep Version
${exist_app}	dpkg -l |grep deepin-movie
${launcher_classification} 	gsettings get com.deepin.dde.launcher display-mode
${dock_display_mode} 	gsettings get com.deepin.dde.dock display-mode
${dde_shutdown} 	ps aux |grep -w /usr/bin/dde-shutdown |grep -v grep |awk '{print $11}'
${dde_lock} 	ps aux |grep -w /usr/bin/dde-lock |grep -v grep |awk '{print $11}'
${simple_passwd} 	sudo su - root -c "echo deepin:a |/usr/sbin/chpasswd"
#${special_passwd} 	sudo su - root -c "echo 'deepin:~/! @#,.<>()\\|[]' |/usr/sbin/chpasswd"
${special_passwd} 	sudo su - root -c "echo 'qjq:<' |/usr/sbin/chpasswd"
${add_account} 		sudo /usr/sbin/useradd -m -s /bin/bash test -G sudo
${add_passwd} 		sudo su - root -c "echo 'test:1' |/usr/sbin/chpasswd"
${del_account} 		sudo /usr/sbin/userdel -fr test
${install_deepin-movie}	sudo apt-get install -y deepin-movie\n
${removeconfig}           rm -f ~/.config/deepin-movie/config.ini
${remove_autostart_file}	rm -f ~/.config/autostart/deepin-movie.desktop
${case1id}	1
${case2id}	24040
${case3id}	24042
${case4id}	24046
${case5id}	24048
${case6id}	24050
${case7id}	24052
#${testplanid}	GetInfo.getPlanID
#${buildname}	GetInfo.getPlanName
#${tester}	lava-test


*** Keywords ***
Get PlanID
	[Return] 	${testplanid}
	${testplanid}			GetInfo.getPlanID

Get BuildName
	[Return] 	${buildname}
	${buildname} 	GetInfo.getBuildName

Get CasesID
	[Return]	@{casesID}
	@{casesID}				GetInfo.getCaseID

Create Result File
	Create File 	test.result
	#${casesID} 		GetInfo.getCasesID
	@{casesID}		Create List 	57636 57646 57649 57652 57720 57722 57724
	${length} 		Get Length 	${casesID}
	Log 			${length}
	Log List 		${casesID}
	Set Suite Variable 	${casesID}

Make Sure Enter Desktop
	Mouse Hide
	Sleep 	2
	Assert Screen 	${desktop_needle}
	#Sleep 	3
	#Assert Window Name 	${desktop_window_name}

Clear Config File
	Run 	${removeconfig}
	Run 	${remove_autostart_file}

Mouse Hide
	${screen_pixels}	pyautogui.size
	${mouse_hide_x}		Evaluate 	int(${screen_pixels}[0])-20
	${mouse_hide_y} 	Evaluate 	int(${screen_pixels}[1])-20
	@{mouse_hide}		Create List 	${mouse_hide_x}	${mouse_hide_y}
	pyautogui.moveTo	@{mouse_hide}

Mouse Move To LeftDown
	${screen_pixels}	pyautogui.size
	${left}		Evaluate 	int(0)
	${down} 	Evaluate 	int(${screen_pixels}[1])
	@{left_down}		Create List 	${left}	${down}
	pyautogui.moveTo	@{left_down}

Send Single Key
	[arguments]	${key}
	${key}	Encode String To Bytes	${key}	UTF-8
	#${key}	Evaluate	str('${key}') # Also str() would work here
	should be byte string	${key}
	pyautogui.press	${key}
	#GetInfo.send_single_key 	${key}

Send Mutiple Key
	[arguments]	@{key}
	#${key}	Encode String To Bytes	${key}	UTF-8
	#${key}	Evaluate	str('${key}') # Also str() would work here
	#should be byte string	${key}
	pyautogui.hotkey	@{key}

TypeWrite
	[arguments]		${char}
	pyautogui.typewrite 	${char}

Mouse Left Click
	[arguments]	@{coor}
	#GetInfo.click 	${coor[0]}	${coor[1]}
	pyautogui.click 	@{coor}

Mouse Right Click
	[arguments]	@{coor}
	#GetInfo.right_click 	${coor[0]}	${coor[1]}
	pyautogui.rightClick 	@{coor}

ScreenShot
	[arguments]	${png}
	pyautogui.screenshot 	${png}

Open Launcher By Click Icon
	@{coor}		GetInfo.getlauncherCoor
	Mouse Left Click 	@{coor}
	Sleep	2
	Assert Window Name 		dde-launcher

Open Launcher By Press Win_key
	Send Single key	${win_key}
	Sleep	2
	#Assert Screen	${launcher_needle}
	Assert Window Name 		dde-launcher
	ScreenShot 		launcher.png

Open Launcher By HotArea
	@{centercoor} 	GetInfo.getCenterScreenCoor
	pyautogui.rightClick 	@{centercoor}
	sleep 	1
	Send Single Key 	c
	sleep 	1
	ScreenShot 	hotarea.png
	Mouse Move To LeftDown
	sleep 	1
	@{coor}		GetInfo.getHotAreaLauncherCoor
	pyautogui.click 	@{coor}
	ScreenShot 	hotareaSetted.png
	Send Single Key 	${esc_key}
	Mouse Move To LeftDown
	sleep 	1
	Assert Window Name 		dde-launcher


Open Launcher By Cmd
	pyautogui.hotkey 	@{open_terminal}
	sleep 	2
	Assert Window Name 		深度终端
	Sleep	2
	pyautogui.typewrite 	dde-launcher -s\n 		interval=0.25
	Sleep	2
	Assert Window Name 		dde-launcher


Exit Launcher
	${windowname}		Run 		${getwindowname}
	Run Keyword If 		'${windowname}' == 'dde-launcher' 		Send Single Key 	${esc_key}

Open Launcher And Open Menu
	#Sleep 	2
	#Mouse Hide
	Sleep 	1
	Send Single key	${win_key}
	Sleep	2
	#Assert Screen	${launcher_needle}
	Assert Window Name 		dde-launcher
	Sleep 	2
	pyautogui.typewrite	${movie_app_name} 	interval=0.25
	Sleep 	2
	#Assert Screen 	${needle_name}
	@{coor}		GetInfo.getIconInLauncher
	Mouse Right Click 	@{coor}


Menu Open
	Open Launcher And Open Menu
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${enter_key}
	sleep 	6
	Assert Window Name 		深度影院

Menu Send To Desktop
	Open Launcher And Open Menu
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${enter_key}
	${output}  	Run 		${exist_in_desktop}
	Should Contain 		${output}		deepin-movie.desktop

Menu Remove From Desktop
	Open Launcher And Open Menu
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${enter_key}
	${output}  	Run 		${exist_in_desktop}
	Should Not Contain 		${output}		deepin-movie.desktop

Menu Remove From Dock
	Open Launcher And Open Menu
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${enter_key}
	${output}  	Run 		${exist_in_dock}
	Should Not Contain 	${output} 	deepin-movie

Menu Send To Dock
	Open Launcher And Open Menu
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${enter_key}
	${output}  	Run 		${exist_in_dock}
	Should Contain 			${output} 	deepin-movie

Menu Add To Boot
	Open Launcher And Open Menu
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${enter_key}
	sleep 	1
	Send Single Key 		${enter_key}
	${output}  	Run 		${exist_in_boot}
	Should Be Equal 	${output} 	Hidden=false

Menu Remove From Boot
	Open Launcher And Open Menu
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${enter_key}
	sleep 	1
	Send Single Key 		${enter_key}
	${output}  	Run 		${exist_in_boot}
	Should Be Equal 	${output} 	Hidden=true

Menu Uninstall
	Open Launcher And Open Menu
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${enter_key}
	@{coor} 	GetInfo.getUninstallBtnCoor
	sleep 	1
	pyautogui.moveTo 		@{coor}
	ScreenShot 		hoverUninstallBtn.png
	pyautogui.click 		@{coor}
	sleep 	5
	${output}  	Run 		${exist_app}
	Should Be Empty 		${output}

Switch To Efficient Mode
	@{coor} 	GetInfo.getDockBottomCoor
	Mouse Right Click 	@{coor}
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${enter_key}

Switch To Classic Mode
	@{coor} 	GetInfo.getDockBottomCoor
	Mouse Right Click 	@{coor}
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${enter_key}

Switch To Fashion Mode
	@{coor} 	GetInfo.getDockBottomCoor
	Mouse Right Click 	@{coor}
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${enter_key}

Switch To Always Show
	@{coor} 	GetInfo.getDockBottomCoor
	Mouse Right Click 	@{coor}
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${enter_key}

Switch To Always Hide
	@{coor} 	GetInfo.getDockBottomCoor
	Mouse Right Click 	@{coor}
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${enter_key}

Switch To Smart Hide
	@{coor} 	GetInfo.getDockBottomCoor
	Mouse Right Click 	@{coor}
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${down_key}
	sleep 	1
	Send Single Key 		${enter_key}

Switch To Always Hide Teardown
	@{coor} 	GetInfo.getScreenBottom
	pyautogui.moveTo 	@{coor}
	sleep 	2
	${height} 	GetInfo.getDockHeight
	Run Keyword If  	${height}!=1 		Switch To Always Show
	Write Result	23298

Maximize Window
	pyautogui.hotkey 	@{maximize}

Restore Window
	pyautogui.hotkey 	@{minimize}

Open App
	[arguments] 	${app_name}
	Open Launcher By Press Win_key
	pyautogui.typewrite 	${app_name}\n 	interval=0.25
	sleep 	2
	Assert Window Name		深度终端


Switch To Smart Hide Teardown
	@{coor} 	GetInfo.getScreenBottom
	pyautogui.moveTo 	@{coor}
	sleep 	2
	${height} 	GetInfo.getDockHeight
	Run Keyword If  	${height}!=1 		Switch To Always Show
	Send Mutiple Key 	@{close_window}
	Write Result	23304

Switch Account Teardown
	Send Mutiple Key 	@{dde_session_ui}
	sleep 	1
	Send Single Key 	left
	sleep 	1
	Send Single Key 	left
	sleep 	1
	Send Single Key 	${enter_key}
	sleep 	1
	Send Single Key 	left
	sleep 	1
	Send Single Key 	${enter_key}
	sleep 	1
	${output} 	Run 	${dde_lock}
	Run Keyword If		'${output}' == '/usr/bin/dde-lock' 		TypeWrite 		a
	Send Single Key 	${enter_key}
	sleep 	3
	Assert Window Name 	dde-desktop
	Run 	${del_account}
	Write Result 	62720

Search APP
	[arguments]	${app_name}
	#${app_name}	Encode String To Bytes	${app_name}	UTF-8
	pyautogui.typewrite	${app_name}
	Sleep 	8
	Assert Screen 	${movie_icon_needle}

Assert Window Name
	[arguments]	${name}
	${window_name}   Run   ${getwindowname}
	Should Be Equal   ${window_name}   ${name}

Assert Screen
	[arguments]	${needle}
	${needle}	Encode String To Bytes	${needle}	UTF-8
	${return_result}	pyautogui.locateCenterOnScreen	${needle}
	Sleep	2
	Should Not Be Equal	${return_result}	${None}
	[return]	${return_result}

Get Coor of Needle
	[arguments]	${needle}
	${needle}	Encode String To Bytes	${needle}	UTF-8
	${return_result}	pyautogui.locateCenterOnScreen	${needle}
	[return]	${return_result}

Assert Screen And Click
	[arguments]	${needle}
	${needle}	Encode String To Bytes	${needle}	UTF-8
	Sleep	2
	${status}	${value}	Run Keyword 	Assert Screen 	${needle}
	Run Keyword If 	'${status}' == 'PASS' 	Mouse Left Click	${value}

Assert Screen And Click Right
	[arguments]	${needle}
	${needle}	Encode String To Bytes	${needle}	UTF-8
	${status}	${value}	Run Keyword 	Assert Screen 	${needle}
	Run Keyword If 	'${status}' == 'PASS' 	Mouse Right Click	${value}

Fill Pass Result in Testlink
	[arguments]	${caseid}
	${testplanid} 	Get PlanID
	${buildname}	Get BuildName
	FillResult.FillResultToTestlink	testcaseid=${caseid}	testplanid=${testplanid}
	...	buildname=${buildname}	result=p	note='robotframework test passed'	user='lava-test'

Fill Fail Result in Testlink
	[arguments]	${caseid}
	${testplanid} 	Get PlanID
	${buildname}	Get BuildName
	FillResult.FillResultToTestlink	testcaseid=${caseid}	testplanid=${testplanid}
	...	buildname=${buildname}	result=f	note='robotframework test failed'	user='lava-test'

Teardown Case
	[arguments]	${caseid}
	Run Keyword If Test Passed	Fill Pass Result in Testlink	${caseid}
	Run Keyword If Test Failed	Fill Fail Result in Testlink	${caseid}

Write Pass Result To File
	[arguments]	${caseid}
	Append To File 		test.result 	${caseid} Pass\n

Write Fail Result To File
	[arguments]	${caseid}
	Append To File  	test.result 	${caseid} Fail\n
	ScreenShot 				${caseid}.png

Write Result
	[arguments]	${caseid}
	Run Keyword If Test Passed 	Write Pass Result To File 	${caseid}
	Run Keyword If Test Failed 	Write Fail Result To File 	${caseid}

*** Test Cases ***
Test Launcher Start-up
	[Tags]	23264
	Open Launcher By Click Icon
	Exit Launcher
	Open Launcher By Press Win_key
	Exit Launcher
	Open Launcher By HotArea
	Exit Launcher
	Open Launcher By Cmd
	Exit Launcher
	[Teardown]	Write Result	23264


Test Launcher Operation
	[Tags]	23274
	Menu Open
	Menu Send To Desktop
	Exit Launcher
	Menu Remove From Desktop
	Exit Launcher
	#Menu Remove From Dock
	#Exit Launcher
	#Menu Send To Dock
	#Exit Launcher
	Menu Add To Boot
	Exit Launcher
	Menu Remove From Boot
	Exit Launcher
	Menu Uninstall
	Exit Launcher
	[Teardown]	Write Result	23274


Test Launcher Classification
	[Tags] 	23286
	Open Launcher By Press Win_key
	@{coor}			GetInfo.getClassificationIconCoor
	Mouse Left Click 		@{coor}
	${output} 	Run 	${launcher_classification}
	Should Be Equal 	${output} 	\'category\'
	sleep 	2
	Mouse Left Click 		@{coor}
	${output} 	Run 	${launcher_classification}
	Should Be Equal 	${output} 	\'free\'
	Exit Launcher
	[Teardown]	Write Result	23286

Test Dock Switch Mode
	[Tags]	23293
	Switch To Efficient Mode
	sleep 	1
	${output}			Run 	${dock_display_mode}
	Should Be Equal 		${output} 	\'efficient\'
	Switch To Classic Mode
	sleep 	1
	${output}			Run 	${dock_display_mode}
	Should Be Equal 		${output} 	\'classic\'
	Switch To Fashion Mode
	sleep 	1
	${output}			Run 	${dock_display_mode}
	Should Be Equal 		${output} 	\'fashion\'
	[Teardown]	Write Result	23293

Test Always Hide
	[Tags] 	23298
	@{coor} 	GetInfo.getDockBottomCoor
	Mouse Right Click 	@{coor}
	Switch To Always Hide
	@{coor}	GetInfo.getCenterScreenCoor
	pyautogui.moveTo 	@{coor}
	sleep 	2
	${height}		GetInfo.getDockHeight
	Should Be Equal 	${height} 	1
	@{coor} 	GetInfo.getScreenBottom
	pyautogui.moveTo 	@{coor}
	sleep 	2
	${height}		GetInfo.getDockHeight
	Should Not Be Equal 	${height} 	1
	@{coor}	GetInfo.getCenterScreenCoor
	pyautogui.moveTo 	@{coor}
	sleep 	2
	${height}		GetInfo.getDockHeight
	Should Be Equal 	${height} 	1
	Send Single Key 	${win_key}
	sleep 	2
	${height}		GetInfo.getDockHeight
	Should Not Be Equal 	${height} 	1
	Send Single Key 	${esc_key}
	Send Mutiple Key 	@{show_dock}
	sleep 	2
	${height}		GetInfo.getDockHeight
	Should Not Be Equal 	${height} 	1
	Switch To Always Show
	[Teardown] 	Switch To Always Hide Teardown

Test Smart Hide
	[Tags] 	23304
	@{coor} 	GetInfo.getDockBottomCoor
	Mouse Right Click 	@{coor}
	Switch To Smart Hide
	@{coor}	GetInfo.getCenterScreenCoor
	pyautogui.moveTo 	@{coor}
	Open App 		deepin-terminal
	Maximize Window
	sleep 	2
	${height}		GetInfo.getDockHeight
	Should Be Equal 	${height} 	1
	Restore Window
	sleep 	2
	${height}		GetInfo.getDockHeight
	Should Not Be Equal 	${height} 	1
	[Teardown] 	Switch To Smart Hide Teardown

Test Lock Screen
	[Tags] 	23337
	Run 		${simple_passwd}
	Send Mutiple Key 	@{dde_session_ui}
	sleep 	2
	Send Single Key 	left
	sleep 	2
	Send Single Key 	left
	sleep 	2
	Send Single Key 	${enter_key}
	sleep 	2
	Assert Window Name 	dde-desktop
	Send Mutiple Key 		@{lock}
	sleep 	2
	Assert Window Name 	dde-lock
	Send Single Key 	a\n
	sleep 	2
	Assert Window Name 	dde-desktop

	[Teardown] 	Write Result	23337

Test Correct Password
	[Tags] 	62691
	Run 		${special_passwd}
	Send Mutiple Key 		@{lock}
	sleep 	3
	${output} 	Run 	${dde_lock}
	Should Be Equal 	${output} 	/usr/bin/dde-lock
	sleep 	1
	#log many 			@{special_char1}
	log many			@{special_char2}
	#Send Mutiple Key  	@{special_char1}
	#sleep 	1
	#ScreenShot 		password1.png
	Send Mutiple Key 		@{special_char2}
	sleep 	1
	ScreenShot 		password2.png
	sleep 	2
	Send Single Key 		${enter_key}
	sleep 	2
	Assert Window Name 	dde-desktop
	[Teardown] 	Write Result	62691

Test Switch Account
	[Tags] 	62720
	Run 	${add_account}
	sleep 	2
	pyautogui.typewrite 	a
	Send Single Key 	${enter_key}
	Run 	${add_passwd}
	sleep 	10
	Send Mutiple Key 	@{dde_session_ui}
	sleep 	2
	Send Single Key 	left
	sleep 	2
	Send Single Key 	left
	sleep 	2
	Send Single Key 	${enter_key}
	sleep 	2
	Send Single Key 	right
	sleep 	2
	Send Single Key 	${enter_key}
	sleep 	2
	${output} 	Run 	${dde_lock}
	Run Keyword If		'${output}' == '/usr/bin/dde-lock' 		TypeWrite 	 	1
	Send Single Key 	${enter_key}
	sleep 	3
	Assert Window Name 	dde-desktop
	[Teardown] 		Switch Account Teardown


Test Launcher Right Key Menu Boot
	[Tags]	${casesID[6]}
	Menu Add To Boot
	sleep 	2
	Menu Remove From Boot
	[Teardown]	Write Result	${casesID[5]}

Test Launcher Right Key Menu Uninstall
	[Tags]	${casesID[7]}
	Menu Uninstall
	[Teardown]	Write Result	${casesID[6]}
